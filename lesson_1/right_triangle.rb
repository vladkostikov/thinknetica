# Прямоугольный треугольник
# Программа запрашивает у пользователя 3 стороны треугольника и определяет,
# является ли треугольник прямоугольным, используя теорему Пифагора
# и выводит результат на экран.
#
# Также, если треугольник является при этом равнобедренным
# (т.е. у него равны любые 2 стороны), то дополнитьельно выводится информация
# о том, что треугольник еще и равнобедренный.
#
# Подсказка: чтобы воспользоваться теоремой Пифагора, нужно сначала найти
# самую длинную сторону (гипотенуза) и сравнить ее значение в квадрате
# с суммой квадратов двух остальных сторон.
# Если все 3 стороны равны, то треугольник равнобедренный и равносторонний,
# но не прямоугольный.

print 'Введите длину первой стороны треугольника: '
first_side = gets.to_f

print 'Введите длину второй стороны треугольника: '
second_side = gets.to_f

print 'Введите длину третьей стороны треугольника: '
third_side = gets.to_f

# Создаем массив со сторонами и сортируем
# Сохраняем стороны, как катеты и гипотенуза
sides = [first_side, second_side, third_side].sort
cathetus1, cathetus2, hypotenuse = sides

# Выводим ошибку если введена хотя бы одна неположительная сторона
sides.each do |side|
  if side <= 0
    puts 'Ошибка. Все длины сторон треугольника должны быть положительными.'
    exit
  end
end

# Выводим ошибку если треугольника с такими сторонами не может существовать
if hypotenuse >= cathetus1 + cathetus2
  puts 'Ошибка. Треугольника с такими длинами сторон не может существовать.'
  puts 'Правило => Сумма катетов, должна быть больше гипотенузы.'
  exit
end

# Проверяем является ли треугольник прямоугольным
is_right_triangle = cathetus1**2 + cathetus2**2 == hypotenuse**2

# Проверяем является ли треугольник равнобедренным
is_isosceles_triangle = cathetus1 == cathetus2 || cathetus2 == hypotenuse

# Проверяем является ли треугольник равносторонним
is_equilateral_triangle = cathetus1 == hypotenuse

# Подготавливаем строку для вывода результата
array_for_result = []
array_for_result << 'Прямоугольный' if is_right_triangle
array_for_result << 'Непрямоугольный' if !is_right_triangle
array_for_result << 'Равнобедренный' if is_isosceles_triangle
array_for_result << 'Равносторонний' if is_equilateral_triangle
array_for_result << 'Разносторонний' if !is_isosceles_triangle && !is_equilateral_triangle
result = array_for_result.join(', ').capitalize

# Выводим результат
puts "Треугольник со сторонами: #{first_side}, #{second_side}, #{third_side}"
puts result
